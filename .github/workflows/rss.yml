name: build rss
on:
  push:
    branches: [main]
    paths:
      - "posts/**"
      - "posts.json"
permissions:
  contents: write
jobs:
  rss:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            async function get(path){
              try{
                const r = await github.rest.repos.getContent({owner, repo, path});
                return Buffer.from(r.data.content, r.data.encoding).toString('utf8');
              }catch(e){ return null }
            }
            const base = "https://dbirchfield74-echo.github.io/echo-link";
            const postsTxt = await get('posts.json') || '[]';
            let posts = [];
            try{ posts = JSON.parse(postsTxt) }catch(e){}
            const esc = s=>String(s||'').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
            const items = posts.map(p => `
  <item>
    <title>${esc(p.title)}</title>
    <link>${base}/posts/${p.slug}.html</link>
    <guid>${base}/posts/${p.slug}.html</guid>
    <pubDate>${(p.date||new Date().toISOString().slice(0,10))}</pubDate>
  </item>`).join('\n');
            const rss = `<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"><channel>
  <title>Echo Feed</title>
  <link>${base}/</link>
  <description>Posts from Echo</description>
${items}
</channel></rss>`;
            let sha = null;
            try{
              const r = await github.rest.repos.getContent({owner, repo, path:'feed.xml'});
              sha = r.data.sha;
            }catch(e){}
            await github.rest.repos.createOrUpdateFileContents({
              owner, repo, path:'feed.xml',
              message:'Build RSS feed',
              content: Buffer.from(rss,'utf8').toString('base64'),
              sha
            });