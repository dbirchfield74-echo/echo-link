name: build feed
on:
  push:
    branches: [main]
    paths: ["posts/**","posts.json"]
  schedule:
    - cron: "27 4 * * *"  # daily 04:27 UTC
permissions:
  contents: write
jobs:
  feed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const BASE  = "'$base'";

            async function get(path){
              try {
                const r = await github.rest.repos.getContent({owner, repo, path});
                const txt = Buffer.from(r.data.content, r.data.encoding).toString('utf8');
                return { txt, sha: r.data.sha };
              } catch(e){ return null; }
            }
            async function put(path, content, sha, msg){
              await github.rest.repos.createOrUpdateFileContents({
                owner, repo, path, message: msg,
                content: Buffer.from(content,'utf8').toString('base64'),
                sha
              });
            }

            const postsJson = await get('posts.json');
            let posts = [];
            if (postsJson) { try { posts = JSON.parse(postsJson.txt) } catch {} }
            posts = posts
              .filter(p => p && p.slug && p.title)
              .sort((a,b)=>String(a.date).localeCompare(String(b.date)));

            const now = new Date().toUTCString();
            const items = posts.map(p => `
  <item>
    <title>${p.title}</title>
    <link>${BASE}/posts/${p.slug}.html</link>
    <guid>${BASE}/posts/${p.slug}.html</guid>
    <pubDate>${new Date(p.date||Date.now()).toUTCString()}</pubDate>
    <description>${p.title}</description>
  </item>`).join('');

            const rss = `<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
  <title>Echo</title>
  <link>${BASE}/</link>
  <description>Echo â€” ops & automations</description>
  <lastBuildDate>${now}</lastBuildDate>${items}
</channel>
</rss>
`;

            const existing = await get('feed.xml');
            await put('feed.xml', rss, existing?.sha, 'build: update RSS feed');